# Ignore MongoDB lock files
data/*.lock
data/WiredTiger*

# Node.js dependencies
node_modules/
# Explanation: This folder contains all installed packages. It is not recommended to track it since dependencies can be reinstalled using `package.json`.

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
# Explanation: Ignore log files created during runtime or installation.

# Environment variables
.env
.env.* # For any `.env` variations like `.env.development`
# Explanation: Contains sensitive configuration information like API keys, database credentials, etc.

# System files
.DS_Store   # macOS system files
Thumbs.db   # Windows system files

# Editor/IDE settings
.vscode/         # VSCode settings
.idea/           # WebStorm/IntelliJ settings
*.swp            # Swap files created by some editors

# Optional OS-generated files
*.bak            # Backup files
*.tmp            # Temporary files
*.lock           # Lock files (non-MongoDB-related)

# Build and production directories
dist/
build/
# Explanation: Generated files after a build process. These should not be committed because they can be rebuilt.

# Test coverage
coverage/
# Explanation: Folder generated by testing tools (like Jest) to store code coverage reports.

# Optional package managers
npm-debug.log*
.yarn-integrity
.pnp.*
# Explanation: Files generated by npm or yarn during dependency installation.

# Cache directories
.cache/
.tmp/
# Explanation: Cache files used by build or task runner tools.

# Static analysis tools
.eslintcache
*.tsbuildinfo
# Explanation: Files generated by tools like ESLint or TypeScript.

# Binaries
*.exe
*.out
*.app
*.dmg
# Explanation: Any binary files generated during development.

